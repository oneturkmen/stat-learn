download.packages("ISLR")
.libPaths(new = "/home/User/R/library")
download.packages("ISLR")
biocLite(ISLR)
install.packages("ISLR")
library(ISLR)
library("ISLR")
names(Smarket)
summary(Smarket)
?Smarket
?pairs
pairs(Smarket, col=Smarket&Direction)
pairs(Smarket, col=Smarket&$irection)
pairs(Smarket, col=Smarket$irection)
require(ISLR)
names(Smarket)
summary(Smarket)
?Smarket
pairs(Smarket, col=Smarket$irection)
glm.fit = glm(Direction ~ Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data = Smarket, family=binomial)
pairs(Smarket, col=Smarket$Direction)
?glm
summary(glm.fit)
?glm.probs
?predict()
glm.probs = predict(glm.fit, type="response")
glm.probs[1:5]
glm.pred = ifelse(glm.probs>5, "Up", "Down")
attach(Smarket)
table(glm.pred, Direction)
mean(glm.pred == Direction)
table(glm.pred, Direction)
glm.pred = ifelse(glm.probs>5, "Up", "Down")
attach(Smarket)
table(glm.pred, Direction)
mean(glm.pred == Direction)
train = Year<2005
glm.fit = glm(Direction ~ Log1+Log2+Log3+Log4+Log5+Volume,
data=Smarket, family=binomial, subset=train)
glm.fit = glm(Direction ~ Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket, family=binomial, subset=train)
glm.fit = glm(Direction ~ Lag1+Lag2+Lag3+Lag4+Lag5+Volume,
data=Smarket, family=binomial, subset=train)
glm.probs = predict(glm.fit, newdata=Smarket[!train,],type="response")
glm.pred = ifelse(glm.probs>0.5, "Up", "Down")
Direction.2005=Smarket$Direction[!train]
table(glm.pred, Direction.2005)
mean(glm.pred==Direction.2005)
glm.fit = glm(Direction ~ Lag1+Lag2,
data=Smarket, family=binomial, subset=train)
glm.probs = predict(glm.fit, newdata=Smarket[!train,],type="response")
glm.pred = ifelse(glm.probs>0.5, "Up", "Down")
Direction.2005=Smarket$Direction[!train]
table(glm.pred, Direction.2005)
mean(glm.pred==Direction.2005)
106/(1+106)
summary(glm.fit)
rm(list=ls)
rm(ls=list)
rm(list=ls())
lda.fit = lda(Direction ~ Lag1 + Lag2, data = Smarket, subset=Year<2005)
require(ISLR)
require(MASS)
lda.fit = lda(Direction ~ Lag1 + Lag2, data = Smarket, subset=Year<2005)
?lda
View(Directin)
view(Direction)
View(Direction)
library(dplyr)
View(Direction)
view(data)
view(Smarket)
View(Smarket)
summary(Smarket)
?glm
?Smarket
?class
require(ISLR)
require(MASS)
?lda
View(Smarket)
lda.fit = lda(Direction ~ Lag1 + Lag2, data = Smarket, subset=Year<2005)
lda.fit
plot(lda.fit)
Smarket.2005 = subset(Smarket, Year==2005)
lda.pred = predict(lda.fit, Smarket.2005)
lda.pred[1:5,]
lda.pred[1:5]
class(lda.pred)
data.frame(lda.pred)[1:5]
data.frame(lda.pred)[1:5,]
talbe(lda.pred$class, Smarket.2005$Direction)
table(lda.pred$class, Smarket.2005$Direction)
mean(lda.pred$class == Smarket.2005$Direction)
?data.frame
library(class)
?knn
?cbind
attach(Smarket)
Xlag = cbind(Lag1, Lag2)
View(Xlag)
train=Year<2005
train
?knn
table(knn.pred, Direction[!train])
knn.pred = knn(Xlag[train,], Xlag[!train,], Direction[train], k=1)
table(knn.pred, Direction[!train])
mean(knn.pred==Direction[!train])
knn.pred = knn(Xlag[train,], Xlag[!train,], Direction[train], k=5)
table(knn.pred, Direction[!train])
mean(knn.pred==Direction[!train])
knn.pred = knn(Xlag[train,], Xlag[!train,], Direction[train], k=2)
table(knn.pred, Direction[!train])
mean(knn.pred==Direction[!train])
knn.pred = knn(Xlag[train,], Xlag[!train,], Direction[train], k=3)
plot(knn.pred)
knn.pred
table(knn.pred, Direction[!train])
mean(knn.pred==Direction[!train])
knn.pred = knn(Xlag[train,], Xlag[!train,], Direction[train], k=2)
table(knn.pred, Direction[!train])
mean(knn.pred==Direction[!train])
